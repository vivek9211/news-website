{"ast":null,"code":"import { useRef as t, useEffect as e, forwardRef as o, useState as n, useImperativeHandle as r, createElement as a } from \"react\";\nfunction i() {\n  return (i = Object.assign || function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var o = arguments[e];\n      for (var n in o) Object.prototype.hasOwnProperty.call(o, n) && (t[n] = o[n]);\n    }\n    return t;\n  }).apply(this, arguments);\n}\nvar c = function () {};\nfunction l(t, e) {\n  return Math.random() * (e - t + 1) + t;\n}\nfunction s(t, e) {\n  return Math.floor(l(t, e));\n}\nvar u = o(function (o, u) {\n  var d = o.progress,\n    f = o.height,\n    v = void 0 === f ? 2 : f,\n    h = o.className,\n    p = void 0 === h ? \"\" : h,\n    m = o.color,\n    b = void 0 === m ? \"red\" : m,\n    g = o.background,\n    y = void 0 === g ? \"transparent\" : g,\n    w = o.onLoaderFinished,\n    x = o.transitionTime,\n    S = void 0 === x ? 300 : x,\n    k = o.loaderSpeed,\n    M = void 0 === k ? 500 : k,\n    N = o.waitingTime,\n    R = void 0 === N ? 1e3 : N,\n    T = o.shadow,\n    Y = void 0 === T || T,\n    I = o.containerStyle,\n    O = void 0 === I ? {} : I,\n    j = o.style,\n    P = void 0 === j ? {} : j,\n    z = o.shadowStyle,\n    C = void 0 === z ? {} : z,\n    F = o.containerClassName,\n    L = void 0 === F ? \"\" : F,\n    q = t(!1),\n    A = n(0),\n    B = A[0],\n    D = A[1],\n    E = t({\n      active: !1,\n      refreshRate: 1e3\n    }),\n    G = n(!1),\n    H = G[0],\n    J = G[1],\n    K = n({\n      active: !1,\n      value: 20\n    }),\n    Q = K[0],\n    U = K[1],\n    V = {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      height: v,\n      background: y,\n      zIndex: 99999999999,\n      width: \"100%\"\n    },\n    W = {\n      boxShadow: \"0 0 10px \" + b + \", 0 0 10px \" + b,\n      width: \"5%\",\n      opacity: 1,\n      position: \"absolute\",\n      height: \"100%\",\n      transition: \"all \" + M + \"ms ease\",\n      transform: \"rotate(3deg) translate(0px, -4px)\",\n      left: \"-10rem\"\n    },\n    X = n({\n      height: \"100%\",\n      background: b,\n      transition: \"all \" + M + \"ms ease\",\n      width: \"0%\"\n    }),\n    Z = X[0],\n    $ = X[1],\n    _ = n(W),\n    tt = _[0],\n    et = _[1];\n  e(function () {\n    return q.current = !0, function () {\n      q.current = !1;\n    };\n  }, []), r(u, function () {\n    return {\n      continuousStart: function (t, e) {\n        if (void 0 === e && (e = 1e3), !Q.active) if (H) console.warn(\"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\");else {\n          var o = t || s(10, 20);\n          E.current = {\n            active: !0,\n            refreshRate: e\n          }, D(o), at(o);\n        }\n      },\n      staticStart: function (t) {\n        if (!E.current.active) if (H) console.warn(\"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\");else {\n          var e = t || s(30, 50);\n          U({\n            active: !0,\n            value: e\n          }), D(e), at(e);\n        }\n      },\n      complete: function () {\n        H ? console.warn(\"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\") : (D(100), at(100));\n      }\n    };\n  }), e(function () {\n    $(i({}, Z, {\n      background: b\n    })), et(i({}, tt, {\n      boxShadow: \"0 0 10px \" + b + \", 0 0 5px \" + b\n    }));\n  }, [b]), e(function () {\n    if (u) {\n      if (u && void 0 !== d) return void console.warn('react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.');\n      at(B), J(!1);\n    } else d && at(d), J(!0);\n  }, [d]);\n  var ot,\n    nt,\n    rt,\n    at = function t(e) {\n      e >= 100 ? ($(i({}, Z, {\n        width: \"100%\"\n      })), Y && et(i({}, tt, {\n        left: e - 10 + \"%\"\n      })), setTimeout(function () {\n        q.current && ($(i({}, Z, {\n          opacity: 0,\n          width: \"100%\",\n          transition: \"all \" + S + \"ms ease-out\",\n          color: b\n        })), setTimeout(function () {\n          q.current && (E.current.active && (E.current = i({}, E.current, {\n            active: !1\n          }), D(0), t(0)), Q.active && (U(i({}, Q, {\n            active: !1\n          })), D(0), t(0)), w && w(), D(0), t(0));\n        }, S));\n      }, R)) : ($(function (t) {\n        return i({}, t, {\n          width: e + \"%\",\n          opacity: 1,\n          transition: e > 0 ? \"all \" + M + \"ms ease\" : \"\"\n        });\n      }), Y && et(i({}, tt, {\n        left: e - 5.5 + \"%\",\n        transition: e > 0 ? \"all \" + M + \"ms ease\" : \"\"\n      })));\n    };\n  return ot = function () {\n    var t = l(Math.min(10, (100 - B) / 5), Math.min(20, (100 - B) / 3));\n    B + t < 95 && (D(B + t), at(B + t));\n  }, nt = E.current.active ? E.current.refreshRate : null, rt = t(c), e(function () {\n    rt.current = ot;\n  }), e(function () {}, [void 0]), e(function () {\n    if (null !== nt && !1 !== nt) {\n      var t = setInterval(function () {\n        return rt.current();\n      }, nt);\n      return function () {\n        return clearInterval(t);\n      };\n    }\n  }, [nt]), a(\"div\", {\n    className: L,\n    style: i({}, V, O)\n  }, a(\"div\", {\n    className: p,\n    style: i({}, Z, P)\n  }, Y ? a(\"div\", {\n    style: i({}, tt, C)\n  }) : null));\n});\nexport default u;","map":{"version":3,"sources":["../src/useInterval.ts","../src/utils.ts","../src/index.tsx"],"names":["noop","callback","delay","immediate","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","randomValue","min","max","Math","random","randomInt","floor","LoadingBar","forwardRef","progress","height","className","color","background","onLoaderFinished","transitionTime","loaderSpeed","waitingTime","shadow","containerStyle","style","shadowStyle","shadowStyleProp","containerClassName","ref","isMounted","localProgress","localProgressSet","useState","pressedContinuous","active","refreshRate","usingProps","setUsingProps","pressedStaticStart","setStaticStartPressed","value","transition","width","loaderContainerStyle","position","top","left","zIndex","initialShadowStyles","boxShadow","opacity","transform","loaderStyle","loaderStyleSet","shadowStyleSet","useImperativeHandle","continuousStart","startingValue","console","warn","val","checkIfFull","staticStart","complete","undefined","_progress","setTimeout","_loaderStyle","React"],"mappings":"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","sourcesContent":["import { useEffect, useRef } from 'react'\n\n/** keep typescript happy */\nconst noop = () => {}\n\nexport function useInterval(\n  callback: () => void,\n  delay: number | null | false,\n  immediate?: boolean\n) {\n  const savedCallback = useRef(noop)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  })\n\n  // Execute callback if immediate is set.\n  useEffect(() => {\n    if (!immediate) return\n    if (delay === null || delay === false) return\n    savedCallback.current()\n  }, [immediate])\n\n  // Set up the interval.\n  useEffect(() => {\n    if (delay === null || delay === false) return undefined\n    const tick = () => savedCallback.current()\n    const id = setInterval(tick, delay)\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default useInterval\n","export function randomValue(min: number, max: number): number {\n  return (Math.random() * (max - min + 1) + min)\n}\n\nexport function randomInt(min: number, max: number): number {\n  return Math.floor(randomValue(min, max))\n}\n","import * as React from 'react'\nimport {\n  CSSProperties,\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport { useInterval } from './useInterval'\nimport { randomInt, randomValue } from './utils'\n\nexport type IProps = {\n  progress?: number\n  color?: string\n  shadow?: boolean\n  background?: string\n  height?: number\n  onLoaderFinished?: () => void\n  className?: string\n  containerClassName?: string\n  loaderSpeed?: number\n  transitionTime?: number\n  waitingTime?: number\n  style?: CSSProperties\n  containerStyle?: CSSProperties\n  shadowStyle?: CSSProperties\n}\n\nexport type LoadingBarRef = {\n  continuousStart: (startingValue?: number, refreshRate?: number) => void\n  staticStart: (startingValue?: number) => void\n  complete: () => void;\n}\n\nconst LoadingBar = forwardRef<LoadingBarRef, IProps>(\n  (\n    {\n      progress,\n      height = 2,\n      className = '',\n      color = 'red',\n      background = 'transparent',\n      onLoaderFinished,\n      transitionTime = 300,\n      loaderSpeed = 500,\n      waitingTime = 1000,\n      shadow = true,\n      containerStyle = {},\n      style = {},\n      shadowStyle: shadowStyleProp = {},\n      containerClassName = ''\n    },\n    ref\n  ) => {\n    const isMounted = useRef(false);\n    const [localProgress, localProgressSet] = useState<number>(0)\n\n    const pressedContinuous = useRef<{\n      active: boolean\n      refreshRate: number\n    }>({ active: false, refreshRate: 1000 })\n\n    const [usingProps, setUsingProps] = useState(false)\n\n    const [pressedStaticStart, setStaticStartPressed] = useState<{\n      active: boolean\n      value: number\n    }>({ active: false, value: 20 })\n\n    const initialLoaderStyle: CSSProperties = {\n      height: '100%',\n      background: color,\n      transition: `all ${loaderSpeed}ms ease`,\n      width: '0%',\n    }\n\n    const loaderContainerStyle: CSSProperties = {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      height,\n      background,\n      zIndex: 99999999999,\n      width: 100 + '%',\n    }\n\n    const initialShadowStyles: CSSProperties = {\n      boxShadow: `0 0 10px ${color}, 0 0 10px ${color}`,\n      width: '5%',\n      opacity: 1,\n      position: 'absolute',\n      height: '100%',\n      transition: `all ${loaderSpeed}ms ease`,\n      transform: 'rotate(3deg) translate(0px, -4px)',\n      left: '-10rem',\n    }\n\n    const [loaderStyle, loaderStyleSet] = useState<CSSProperties>(\n      initialLoaderStyle\n    )\n    const [shadowStyle, shadowStyleSet] = useState<CSSProperties>(\n      initialShadowStyles\n    )\n\n    useEffect(() => {\n      isMounted.current = true;\n      return () => {\n        isMounted.current = false;\n      }\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n      continuousStart(startingValue?: number, refreshRate: number = 1000) {\n        if (pressedStaticStart.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(10, 20)\n\n        pressedContinuous.current = ({\n          active: true,\n          refreshRate,\n        })\n\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      staticStart(startingValue?: number) {\n        if (pressedContinuous.current.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(30, 50)\n\n        setStaticStartPressed({\n          active: true,\n          value: val,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      complete() {\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n        localProgressSet(100)\n        checkIfFull(100)\n      },\n    }))\n\n    useEffect(() => {\n      loaderStyleSet({\n        ...loaderStyle,\n        background: color,\n      })\n\n      shadowStyleSet({\n        ...shadowStyle,\n        boxShadow: `0 0 10px ${color}, 0 0 5px ${color}`,\n      })\n    }, [color])\n\n    useEffect(() => {\n      if (ref) {\n        if (ref && progress !== undefined) {\n          console.warn(\n            'react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.'\n          )\n          return\n        }\n        checkIfFull(localProgress)\n        setUsingProps(false)\n      } else {\n        if (progress) checkIfFull(progress)\n\n        setUsingProps(true)\n      }\n    }, [progress])\n\n    const checkIfFull = (_progress: number) => {\n      if (_progress >= 100) {\n        // now it should wait a little\n        loaderStyleSet({\n          ...loaderStyle,\n          width: '100%',\n        })\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 10 + '%',\n          })\n        }\n\n        setTimeout(() => {\n          if (!isMounted.current) {\n            return;\n          }\n          // now it can fade out\n          loaderStyleSet({\n            ...loaderStyle,\n            opacity: 0,\n            width: '100%',\n            transition: `all ${transitionTime}ms ease-out`,\n            color: color,\n          })\n\n          setTimeout(() => {\n            if (!isMounted.current) {\n              return;\n            }\n            // here we wait for it to fade\n            if (pressedContinuous.current.active) {\n              // if we have continuous loader just ending, we kill it and reset it\n\n              pressedContinuous.current = {\n                ...pressedContinuous.current,\n                active: false,\n              };\n\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (pressedStaticStart.active) {\n              setStaticStartPressed({\n                ...pressedStaticStart,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (onLoaderFinished) onLoaderFinished()\n            localProgressSet(0)\n            checkIfFull(0)\n          }, transitionTime)\n        }, waitingTime)\n      } else {\n        loaderStyleSet((_loaderStyle) => {\n          return {\n            ..._loaderStyle,\n            width: _progress + '%',\n            opacity: 1,\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          }\n        })\n\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 5.5 + '%',\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          })\n        }\n      }\n    }\n\n    useInterval(\n      () => {\n        const minValue = Math.min(10, (100 - localProgress) / 5);\n        const maxValue =  Math.min(20, (100 - localProgress) / 3)\n\n        const random = randomValue(minValue, maxValue);\n\n        if (localProgress + random < 95) {\n          localProgressSet(localProgress + random)\n          checkIfFull(localProgress + random)\n        }\n      },\n      pressedContinuous.current.active ? pressedContinuous.current.refreshRate : null\n    )\n\n    return (\n      <div className={containerClassName} style={{...loaderContainerStyle, ...containerStyle}}>\n        <div className={className} style={{...loaderStyle, ...style}}>\n          {shadow ? <div style={{...shadowStyle, ...shadowStyleProp}} /> : null}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport default LoadingBar\n"]},"metadata":{},"sourceType":"module"}